name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read

env:
  MONGODB_URI: ${{secrets.MONGODB_URI}}
  MONGODB_DATABASE: ${{secrets.MONGODB_DATABASE}}
  MONGODB_OPTIONS: ${{secrets.MONGODB_OPTIONS}}
  MONGODB_USERNAME: ${{secrets.MONGODB_USERNAME}}
  MONGODB_PASSWORD: ${{secrets.MONGODB_PASSWORD}}
  AWS_LAMBDA_FUNCTION_NAME: mbti_backend
  AWS_LAMBDA_REPOSITORY_URL: ${{secrets.AWS_ECR_REPOSITORY_URL}}
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set Datetime
        id: datetime
        run: echo "DATETIME=$(date +"%Y%m%dT%H%M%S")" >> $GITHUB_ENV
      - name: Create .env
        run: |
          echo "MONGODB_URI=$MONGODB_URI" >> backend/.env
          echo "MONGODB_DATABASE=$MONGODB_DATABASE" >> backend/.env
          echo "MONGODB_OPTIONS=$MONGODB_OPTIONS" >> backend/.env
          echo "MONGODB_USERNAME=$MONGODB_USERNAME" >> backend/.env
          echo "MONGODB_PASSWORD=$MONGODB_PASSWORD" >> backend/.env
      - name: Set Image tag
        id: image-tag
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$DATETIME-$SHA_SHORT .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DATETIME-$SHA_SHORT
